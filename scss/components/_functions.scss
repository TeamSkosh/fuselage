/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    _functions.scss

    Functions for use throughout the framework
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

// Reverse a list
@function reverse($list, $recursive: false) {
    $result: ();

    @for $i from length($list)*-1 through -1 {
        @if type-of(nth($list, abs($i))) == list and $recursive {
            $result: append($result, reverse(nth($list, abs($i)), $recusrive));

        } @else {
            $result: append($result, nth($list, abs($i)));
        }
    }

    @return $result;
}

// Get from the modular scale
@function modular-scale($index: 2, $scale-list: $generated-scale) {
    @return nth($generated-scale, $index);
}

// Text inputs
@function text-inputs( $types: all, $selector: input ) {
    $return: ();

    $all-text-input-types:
        text
        password
        date
        datetime
        datetime-local
        month
        week
        email
        number
        search
        tel
        time
        url
        color
        textarea;

    @if $types == all {
        $types: $all-text-input-types;
    }

    @each $type in $types {
        @if $type == textarea {
            @if $selector == input {
                $return: append($return, unquote('#{$type}'), comma)
            } @else {
                $return: append($return, unquote('#{$type}#{$selector}'), comma)
            }
        } @else {
            $return: append($return, unquote('#{$selector}[type="#{$type}"]'), comma)
        }
    }

    @return $return;
}
